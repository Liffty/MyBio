* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html, body, #root, .App {
  height: 100%;
  min-height: 100vh;
  background: radial-gradient(ellipse at bottom, #1B2735 0%, #090A0F 100%);
  overflow: hidden;
}

body {
  color: #ffffff;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  line-height: 1.6;
}

.App {
  display: flex;
  justify-content: center;
  align-items: center;
}

.back-to-main {
    position: absolute;
    top: -300px;
    left: -575px;
    z-index: 10;
  }

.sl√•-slag {
  position: absolute;
  top: 300px;
  left: 0px;
  margin-top: 40;
  text-align: center;
}

.golf-page {
  position: relative;
}

/* Hero Section */
.hero {
  background: linear-gradient(135deg, #0a0a0a 0%, #1a1a1a 50%, #0a0a0a 100%);
  padding: 80px 20px;
  text-align: center;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  position: relative;
}

.hero::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: radial-gradient(ellipse at center, rgba(100, 255, 218, 0.1) 0%, transparent 70%);
  pointer-events: none;
}

.avatar {
  width: 150px;
  height: 150px;
  border-radius: 50%;
  background: linear-gradient(135deg, #64ffda, #4fd1c7);
  border: 4px solid #64ffda;
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 0 auto 30px;
  box-shadow: 0 0 30px rgba(100, 255, 218, 0.3);
  transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.avatar:hover {
  transform: scale(1.05);
  box-shadow: 0 0 40px rgba(100, 255, 218, 0.5);
}

.avatar-text {
  font-size: 4rem;
  font-weight: bold;
  color: #0a0a0a;
}

.name {
  font-size: 3.5rem;
  font-weight: 700;
  color: #64ffda;
  margin-bottom: 15px;
  text-shadow: 0 0 20px rgba(100, 255, 218, 0.3);
}

.title {
  font-size: 1.8rem;
  font-weight: 300;
  color: #ffffff;
  margin-bottom: 20px;
}

.tagline {
  font-size: 1.2rem;
  color: #cccccc;
  max-width: 600px;
  margin: 0 auto;
  opacity: 0.9;
}

/* About Section */
.about {
  background: #1a1a1a;
  padding: 80px 20px;
}

.container {
  max-width: 1200px;
  margin: 0 auto;
}

.about-grid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 60px;
  align-items: start;
}

.about-text h3,
.skills h3 {
  color: #64ffda;
  font-size: 2rem;
  margin-bottom: 25px;
  font-weight: 600;
}

.about-text p {
  font-size: 1.1rem;
  line-height: 1.8;
  color: #e0e0e0;
}

.skills-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));
  gap: 15px;
}

.skill-tag {
  background: #333333;
  padding: 15px 20px;
  border-radius: 25px;
  text-align: center;
  border: 2px solid #444444;
  font-size: 1rem;
  font-weight: 500;
  transition: all 0.3s ease;
  cursor: pointer;
}

.skill-tag:hover {
  background: #64ffda;
  color: #0a0a0a;
  border-color: #64ffda;
  transform: translateY(-2px);
  box-shadow: 0 5px 15px rgba(100, 255, 218, 0.3);
}

/* Contact Section */
.contact {
  background: #0a0a0a;
  padding: 80px 20px;
  text-align: center;
}

.contact h3 {
  color: #64ffda;
  font-size: 2.5rem;
  margin-bottom: 20px;
  font-weight: 600;
}

.contact-intro {
  font-size: 1.2rem;
  color: #cccccc;
  margin-bottom: 50px;
  max-width: 600px;
  margin-left: auto;
  margin-right: auto;
}

.contact-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 30px;
  max-width: 800px;
  margin: 0 auto;
}

.contact-item {
  background: #1a1a1a;
  padding: 30px 20px;
  border-radius: 15px;
  border: 2px solid #333333;
  transition: all 0.3s ease;
  cursor: pointer;
}

.contact-item:hover {
  border-color: #64ffda;
  transform: translateY(-5px);
  box-shadow: 0 10px 30px rgba(100, 255, 218, 0.2);
}

.contact-icon {
  font-size: 2.5rem;
  margin-bottom: 15px;
}

.contact-label {
  color: #64ffda;
  font-weight: 600;
  font-size: 1.1rem;
  margin-bottom: 10px;
}

.contact-value {
  color: #e0e0e0;
  font-size: 1rem;
}

/* Footer */
.footer {
  background: #1a1a1a;
  padding: 30px 20px;
  text-align: center;
  color: #888888;
  border-top: 1px solid #333333;
}

.footer p {
  font-size: 1rem;
}

/* Layout Container */
.l-container {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-gap: 30px;
  width: 100%;
  max-width: 1200px;
  padding: 30px;
}

@media screen and (max-width: 760px) {
  .l-container {
    grid-template-columns: repeat(2, 1fr);
  }
}

/* Game Card Styles */
.b-game-card {
  position: relative;
  z-index: 1;
  width: 100%;
  padding-bottom: 150%;
  perspective: 1000px;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  align-items: center;
  padding-bottom: 0%;
}

.b-game-card__cover {
  position: relative;
  z-index: 1;
  top: 0;
  left: 0;
  width: 100%;
  height: 350px;
  margin-bottom: 18px;
  overflow: hidden;
  background-image: linear-gradient(120deg, #f6d365 0%, #fda085 100%);
  background-size: cover;
  background-position: 60% center;
  perspective-origin: 50% 50%;
  transform-style: preserve-3d;
  transform-origin: top center;
  will-change: transform;
  transform: skewX(.001deg);
  transition: transform .35s ease-in-out;
}
.b-game-card__cover::after {
  display: block;
  content: '';
  position: absolute;
  z-index: 100;
  top: 0;
  left: 0;
  width: 100%;
  height: 120%;
  background: linear-gradient(226deg, rgba(255,255,255,0.4) 0%, rgba(255,255,255,0.4) 35%, rgba(255,255,255,0.2) 42%, rgba(255,255,255,0) 60%);
  transform: translateY(-20%);
  will-change: transform;
  transition: transform .65s cubic-bezier(0.18, 0.9, 0.58, 1);
}
.b-game-card:hover .b-game-card__cover {
  transform: rotateX(7deg) translateY(-6px);
}
.b-game-card:hover .b-game-card__cover::after {
  transform: translateY(0%);
}
.b-game-card::before {
  display: block;
  content: '';
  position: absolute;
  top: 5%;
  left: 5%;
  width: 90%;
  height: 90%;
  background: rgba(0, 0, 0, 0.5);
  box-shadow: 0 6px 12px 12px rgba(0, 0, 0, 0.4);
  will-change: opacity;
  transform-origin: top center;
  transform: skewX(.001deg);
  transition: transform .35s ease-in-out, opacity .5s ease-in-out;
}
.b-game-card:hover::before {
  opacity: 0.6;
  transform: rotateX(7deg) translateY(-6px) scale(1.05);
}

/* Parallax Pixel Stars Background */
#stars, #stars2, #stars3 {
  position: absolute;
  top: 0; left: 0;
  width: 100vw;
  height: 100vh;
  display: block;
  z-index: 0;
  pointer-events: none;
}

#stars {
  width: 1px;
  height: 1px;
  background: transparent;
  box-shadow: 
    100px 200px #FFF, 400px 600px #FFF, 800px 1200px #FFF, 1200px 1600px #FFF,
    1600px 1800px #FFF, 200px 400px #FFF, 600px 800px #FFF, 1000px 1400px #FFF,
    1400px 1800px #FFF, 1800px 2000px #FFF,
    250px 350px #FFF, 550px 750px #FFF, 850px 1150px #FFF, 1250px 1550px #FFF,
    1650px 1750px #FFF, 350px 450px #FFF, 750px 950px #FFF, 1150px 1350px #FFF,
    1750px 1950px #FFF, 1950px 2150px #FFF;
  animation: animStar 50s linear infinite;
}

#stars2 {
  width: 2px;
  height: 2px;
  background: transparent;
  box-shadow: 
    150px 250px #FFF, 450px 650px #FFF, 850px 1250px #FFF, 1250px 1650px #FFF,
    1650px 1850px #FFF, 250px 450px #FFF, 650px 850px #FFF, 1050px 1450px #FFF,
    1450px 1850px #FFF, 1850px 2050px #FFF,
    300px 400px #FFF, 700px 900px #FFF, 1100px 1300px #FFF, 1500px 1700px #FFF,
    1900px 2100px #FFF;
  animation: animStar 100s linear infinite;
}

#stars3 {
  width: 3px;
  height: 3px;
  background: transparent;
  box-shadow: 
    200px 300px #FFF, 500px 700px #FFF, 900px 1300px #FFF, 1300px 1700px #FFF,
    1700px 1900px #FFF, 300px 500px #FFF, 700px 900px #FFF, 1100px 1500px #FFF,
    1500px 1900px #FFF, 1900px 2100px #FFF,
    350px 450px #FFF, 800px 1000px #FFF, 1200px 1400px #FFF, 1600px 1800px #FFF;
  animation: animStar 150s linear infinite;
}

@keyframes animStar {
  from { transform: translateY(0px); }
  to   { transform: translateY(-2000px); }
}

/* Responsive Design */
@media (max-width: 768px) {
  .hero {
    padding: 60px 20px;
  }
  
  .name {
    font-size: 2.5rem;
  }
  
  .title {
    font-size: 1.4rem;
  }
  
  .about-grid {
    grid-template-columns: 1fr;
    gap: 40px;
  }
  
  .skills-grid {
    grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));
  }
  
  .contact-grid {
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 20px;
  }
}

@media (max-width: 480px) {
  .avatar {
    width: 120px;
    height: 120px;
  }
  
  .avatar-text {
    font-size: 3rem;
  }
  
  .name {
    font-size: 2rem;
  }
  
  .title {
    font-size: 1.2rem;
  }
  
  .tagline {
    font-size: 1rem;
  }
}

.card-btn-container {
  display: flex;
  justify-content: center;
  margin-top: 18px;
  z-index: 2;
  width: 100%;
  position: relative;
}

.card-btn {
  font-family: 'Unna', serif;
  padding: 10px 24px;
  font-size: 1rem;
  border-radius: 8px;
  border: none;
  background: #38495a;
  color: #fff;
  cursor: pointer;
  box-shadow: 0 2px 8px rgba(0,0,0,0.08);
  transition: background 0.2s;
  z-index: 2;
  position: relative;
}
.card-btn:hover {
  background: #64ffda;
}

/* Cursor Styles */
.cursor,
.cursor2,
.cursor3 {
  position: fixed;
  border-radius: 50%;
  transform: translateX(-50%) translateY(-50%);
  pointer-events: none;
  left: -100px;
  top: 50%;
  mix-blend-mode: difference;
  transition: all 300ms linear;
  z-index: 99999;
}
.cursor {
  background-color: #fff;
  height: 0;
  width: 0;
}
.cursor2,
.cursor3 {
  height: 36px;
  width: 36px;
  z-index: 99998;
  transition: all 0.3s ease-out;
}
.cursor2.hover,
.cursor3.hover {
  transform: scale(2) translateX(-25%) translateY(-25%);
  border: none;
}
.cursor2 {
  border: 2px solid #fff;
  box-shadow: 0 0 22px rgba(255, 255, 255, 0.6);
}
.cursor2.hover {
  background: rgba(255,255,255,1);
  box-shadow: 0 0 12px rgba(255, 255, 255, 0.2);
}
@media screen and (max-width: 1200px) {
  .cursor, .cursor2, .cursor3 {
    display: none;
  }
}

.cards-container {
  --base-rotation: 0deg; /* The starting rotation of the whole ring (0deg = upright, 180deg = upside down) */
  --full-circle: 360deg; /* The total degrees in the circle */
  --radius: 35vw; /* The size of the ring (distance from center to label) */
  --duration: 200ms; /* Animation duration for transitions */
  --cards-container-size: calc(var(--radius) * 2); /* The diameter of the ring */
  --cards-container-padding: 2rem; /* Padding inside the container */
  --border-color: transparent; /* Border color for the ring (not visible) */
  --label-offset: calc(var(--radius) * -0.9); /* How far out from the center the labels are placed */
  --label-size: 2.2rem; /* Size of each label's clickable area */
  --label-color: #666; /* Default label color */
  --label-color-hover: steelblue; /* Label color on hover */
  --label-line-h: 0; /* Height of the line under the label (default) */
  --label-line-h-current: 1rem; /* Height of the line for the selected label */
  --label-dot-size: 10px; /* Size of the dot under each label */
  --title-top: 1.5rem; /* Top offset for the title inside each card */
  --title-offset-y: 30px; /* Y offset for the title animation */
  --info-top: 5rem; /* Top offset for the info/description */
  --info-width: min(70%, 500px); /* Max width for the info/description */
  --info-offset-y: 30px; /* Y offset for the info animation */

  box-sizing: content-box; /* Ensures padding is not included in width/height */
  position: fixed; /* Fixes the container relative to the viewport */
  inset: 0; /* Stretches the container to all sides (top, right, bottom, left = 0) */
  top: 500px;
  left: 50%;
  transform: translateX(-50%);
  margin: 0 auto; /* Centers the container horizontally */
  right: auto;
  bottom: auto;
  width: var(--cards-container-size); /* Sets the width to the diameter */
  height: var(--cards-container-size); /* Sets the height to the diameter */
  padding: var(--cards-container-padding); /* Adds padding inside the container */
  z-index: 2; /* Places the container above most backgrounds */
}

/* Show half-circle only on desktop */
@media (min-width: 600px) {
  .cards-container {
    --info-top: 18rem;
    /*clip-path: polygon(0 25%, 100% 25%, 100% 100%, 0 100%); /* Clips the top half, showing only the bottom half */
    /*bottom: 0; /* Pins the container to the bottom of the viewport */
    /* top: auto; /* Unsets the top position */
  }
}

.cards {
  position: absolute; /* Positions the ring absolutely inside the container */
  inset: var(--cards-container-padding); /* Offsets the ring by the padding */
  aspect-ratio: 1; /* Keeps the ring perfectly circular */
  border-radius: 50%; /* Makes the ring round */
  border: 1px solid var(--border-color); /* Optional border (invisible here) */
  transition: transform 0.3s cubic-bezier(.77,0,.18,1); /* Smooth rotation */
  transform: rotate(var(--rotation, 0deg));
  list-style: none; /* Removes default list styling */
}
.cards li {
  position: absolute; /* Each card is absolutely positioned in the ring */
  inset: 0; /* Stretches each card to the container */
  margin: 0;
  padding: 0;
  transform-origin: center; /* Rotates around the center of the ring */
  display: grid;
  place-content: center;
  transform: rotate(calc(var(--i) * 360deg / var(--items))); /* Rotates each card to its spot on the ring */
  pointer-events: none; /* Prevents interaction except for the label */
}

.cards li > label {
  position: absolute; /* Absolutely positions the label inside the card */
  inset: 0;
  margin: auto;
  transform: translateY(var(--label-offset)); /* Pushes the label out from the center */
  width: 120px; /* Sets the clickable area */
  height: var(--label-size);
  cursor: pointer;
  pointer-events: initial; /* Allows interaction */
  text-align: center;
  color: var(--label-color);
  font-size: clamp(.8rem, 2.5vw + .04rem,1rem);
  transition: var(--duration) ease-in-out;
}
.cards li > label::before {
  content: '';
  position: absolute;
  top: var(--cards-container-padding);
  left: 50%;
  translate: -50% 0;
  width: var(--label-dot-size);
  height: var(--label-dot-size);
  aspect-ratio: 50%;
  border-radius: 50%;
  background-color: var(--label-color);
  transition: background-color var(--duration) ease-in-out;
}
.cards li > label::after {
  content: '';
  position: absolute;
  top: 100%;
  left: 50%;
  translate: -50% 5px;
  width: 2px;
  height: var(--label-line-h);
  background-color: steelblue;
  transition: height 300ms ease-in-out var(--label-line-delay,0ms);
}

.cards > li:has(input:checked) > h2 {
  display: none;
}


.cards li > label:hover {
  --label-color: var(--label-color-hover);
}
.cards > li > h2,
.cards > li > p {
  position: absolute;
  left: 50%;
  text-align: center;
  transform: translate(-50%, 0);
  transform-origin: center;
}
.cards > li > h2 {
  top: var(--title-top);
  opacity: var(--title-opacity,0);
  translate: 0 var(--title-offset-y);
  transition: var(--duration) ease-in-out var(--title-delay,0ms);
}
.cards > li > p {
  top: var(--info-top);
  margin: 0 auto;
  width: var(--info-width);
  z-index: 2;
  font-size: clamp(.8rem, 2.5vw + 0.05rem, .9rem);
  text-align: center;
  text-wrap: pretty;
  opacity: var(--info-opacity,0);
  transition: var(--duration) ease-in-out var(--info-delay,0ms);
}
/* Hide radio buttons */
input[type="radio"] {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}
/* update custom properties for checked item */
li:has(input:checked) {
  --label-opacity: 1;
  --label-color: var(--label-color-hover);
  --label-line-h: var(--label-line-h-current);
  --label-line-delay: calc(var(--duration) * 2);
  --title-opacity: 1;
  --title-offset-y: 0;
  --title-delay: calc(var(--duration) * 3);
  --info-opacity: 1;
  --info-offset-y: 0;
  --info-delay: calc(var(--duration) * 4);
}
/* rotate container based on checked radio */
/**.cards:has(input:checked) {
  transform: rotate(calc(var(--base-rotation, 0deg) - (var(--index, 0) * var(--full-circle, 360deg) / var(--items, 1))));
}**/